package info.nukoneko.android.qritter;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.net.Uri;import android.os.Bundle;import info.nukoneko.android.qritter.common.BaseActivity;import info.nukoneko.android.qritter.util.ShowToast;import info.nukoneko.android.qritter.util.SimpleAsync;import info.nukoneko.android.qritter.util.TwitterUtil;import twitter4j.Twitter;import twitter4j.TwitterException;import twitter4j.auth.AccessToken;import twitter4j.auth.RequestToken;/** * Created by TEJNEK on 2016/03/17. */public class TwitterOAuthActivity extends BaseActivity {    private Twitter twitter;    private RequestToken requestToken;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        twitter = TwitterUtil.getTwitterInstance(this);        new SimpleAsync<RequestToken>(this).start(new SimpleAsync.AsyncListener<RequestToken>() {            @Override            public RequestToken doTask() {                try {                    return twitter.getOAuthRequestToken(getString(R.string.twitter_callback_uri));                } catch (TwitterException e) {                    e.printStackTrace();                }                return null;            }            @Override            public void onResult(Activity context, RequestToken result) {                requestToken = result;                System.out.print(requestToken.getToken());                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(requestToken.getAuthorizationURL())));            }        });    }    @Override    protected void onNewIntent(Intent intent) {        super.onNewIntent(intent);        Uri uri = intent.getData();        if (uri == null ||                !uri.toString().startsWith(getString(R.string.twitter_callback_uri))){            ShowToast.showToast(R.string.error_unknown);            return;        }        final String verifier = uri.getQueryParameter("oauth_verifier");        if(verifier == null || verifier.length() == 0){            ShowToast.showToast(R.string.error_need_auth);            return;        }        new SimpleAsync<AccessToken>(this).start(new SimpleAsync.AsyncListener<AccessToken>() {            @Override            public AccessToken doTask() {                try {                    return twitter.getOAuthAccessToken(requestToken, verifier);                } catch (TwitterException e) {                    ShowToast.showToast(R.string.error_unknown);                    return null;                }            }            @Override            public void onResult(Activity context, AccessToken result) {                TwitterUtil.addAccount(context, result);                ShowToast.showToast(R.string.success_auth);                MainActivity.startActivity(context);            }        });    }    // from TwitterOAuth    public static void startActivity(Context context) {        context.startActivity(new Intent(context, TwitterOAuthActivity.class));    }}